name: Deploy to EmTech Cloud

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: streamlit-template
  ECS_CLUSTER: emtech-cluster
  ECS_SERVICE: emtech-service
  APP_NAME: streamlit-template

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::734805140038:role/EmTechCloud-GithubActions-streamlit-template
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Check if docker-compose.yml exists
          if [ -f "docker/docker-compose.yml" ]; then
            # Use Docker Compose V2 to build the image
            docker compose -f docker/docker-compose.yml build
            # Tag the built image for ECR - using streamlit as the service name
            docker tag docker-streamlit $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            docker tag docker-streamlit $ECR_REGISTRY/$ECR_REPOSITORY:latest
          else
            # Build a Docker container and push it to ECR
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          fi
          # Push to ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Deploy to Amazon ECS
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
          echo "Deployment started. Check the AWS console for status."
